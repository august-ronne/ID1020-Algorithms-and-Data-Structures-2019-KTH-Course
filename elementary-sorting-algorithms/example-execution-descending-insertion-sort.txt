/*
 * EXAMPLE EXECUTION -- QUESTION 2, 3, 4, LAB 2: ELEMENTARY SORTS
 *
 * This is the exemple execution of both question 2, 3, and 4.
 * The array is created with the Strings supplied by the program user
 * via the command-line arguments. It is important to remember to
 * separate the integers with spaces. Example: 3 1 2 3 leads to array [1, 2, 3]
 *
 */

You have created an array with room for 6 integers.

The following integers have been added to your array:
[1], [2], [3], [4], [5], [0] 
 [[0, 1], [1, 2]]  [[0, 1], [2, 3]]  [[0, 1], [3, 4]]  [[0, 1], [4, 5]]  [[1, 2], [2, 3]]  [[1, 2], [3, 4]]  [[1, 2], [4, 5]]  [[2, 3], [3, 4]]  [[2, 3], [4, 5]]  [[3, 4], [4, 5]] 
Your array will now be sorted in descending order. The program predicts that this will require 10 element swaps.

[2], [1], [3], [4], [5], [0] (nr of element swaps: 1 )
[2], [3], [1], [4], [5], [0] (nr of element swaps: 2 )
[3], [2], [1], [4], [5], [0] (nr of element swaps: 3 )
[3], [2], [4], [1], [5], [0] (nr of element swaps: 4 )
[3], [4], [2], [1], [5], [0] (nr of element swaps: 5 )
[4], [3], [2], [1], [5], [0] (nr of element swaps: 6 )
[4], [3], [2], [5], [1], [0] (nr of element swaps: 7 )
[4], [3], [5], [2], [1], [0] (nr of element swaps: 8 )
[4], [5], [3], [2], [1], [0] (nr of element swaps: 9 )
[5], [4], [3], [2], [1], [0] (nr of element swaps: 10 )

Your array has been sorted
[5], [4], [3], [2], [1], [0] (nr of element swaps: 10 )

Process finished with exit code 0